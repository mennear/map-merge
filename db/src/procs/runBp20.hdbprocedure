PROCEDURE "test_2.db.procs::runBp20"(out bp20_payments table("CONTRACT_ID" nvarchar(40),  "PAYMENT_DATE" date, "AMOUNT_PRINCIPAL" double, "AMOUNT_INTEREST" double, "OUTSTANDING_BALANCE" double, "TIMESTAMP" timestamp) )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
      	delete from "test_2.db.tables::CashFlowEngine.DUMMY_ROW";
		insert into "test_2.db.tables::CashFlowEngine.DUMMY_ROW" values(1);
   
   first = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(1/*BATCH_MIN <INTEGER>*/,
		                                                                                      5/*BATCH_MAX <INTEGER>*/);
		second = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(6/*BATCH_MIN <INTEGER>*/,
		                                                                                      10/*BATCH_MAX <INTEGER>*/);
		third =                                                                                       
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(11/*BATCH_MIN <INTEGER>*/,
		                                                                                      15/*BATCH_MAX <INTEGER>*/);
		fourth =                                                                                      
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(16/*BATCH_MIN <INTEGER>*/,
		                                                                                      20/*BATCH_MAX <INTEGER>*/);
		fifth =                                                                             
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(21/*BATCH_MIN <INTEGER>*/,
		                                                                                      25/*BATCH_MAX <INTEGER>*/);
		                                                                      
		sixth = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(26/*BATCH_MIN <INTEGER>*/,
		                                                                                      30/*BATCH_MAX <INTEGER>*/);
		seventh = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(31/*BATCH_MIN <INTEGER>*/,
		                                                                                      35/*BATCH_MAX <INTEGER>*/);
		eighth =                                                                                       
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(36/*BATCH_MIN <INTEGER>*/,
		                                                                                      40/*BATCH_MAX <INTEGER>*/);
		ninth =                                                                                      
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(41/*BATCH_MIN <INTEGER>*/,
		                                                                                      45/*BATCH_MAX <INTEGER>*/);
		tenth =                                                                             
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(46/*BATCH_MIN <INTEGER>*/,
		                                                                                      50/*BATCH_MAX <INTEGER>*/);
		firstB = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(1/*BATCH_MIN <INTEGER>*/,
		                                                                                      5/*BATCH_MAX <INTEGER>*/);
		secondB = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(6/*BATCH_MIN <INTEGER>*/,
		                                                                                      10/*BATCH_MAX <INTEGER>*/);
		thirdB =                                                                                       
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(11/*BATCH_MIN <INTEGER>*/,
		                                                                                      15/*BATCH_MAX <INTEGER>*/);
		fourthB =                                                                                      
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(16/*BATCH_MIN <INTEGER>*/,
		                                                                                      20/*BATCH_MAX <INTEGER>*/);
		fifthB =                                                                             
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(21/*BATCH_MIN <INTEGER>*/,
		                                                                                      25/*BATCH_MAX <INTEGER>*/);
		                                                                      
		sixthB = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(26/*BATCH_MIN <INTEGER>*/,
		                                                                                      30/*BATCH_MAX <INTEGER>*/);
		seventhB = 
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(31/*BATCH_MIN <INTEGER>*/,
		                                                                                      35/*BATCH_MAX <INTEGER>*/);
		eighthB =                                                                                       
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(36/*BATCH_MIN <INTEGER>*/,
		                                                                                      40/*BATCH_MAX <INTEGER>*/);
		ninthB =                                                                                      
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(41/*BATCH_MIN <INTEGER>*/,
		                                                                                      45/*BATCH_MAX <INTEGER>*/);
		tenthB =                                                                             
		SELECT * FROM "test_2.db.functions::fixedPrinSmallWrapProcForBatch"(46/*BATCH_MIN <INTEGER>*/,
		                                                                                      50/*BATCH_MAX <INTEGER>*/);                                                                                 
        bp20_payments =                                                                              
        select * from :first
        union all select * from :second
        union all select * from :third
        union all select * from :fourth
        union all select * from :fifth
        union all select * from :sixth
        union all select * from :seventh
        union all select * from :eighth
        union all select * from :ninth
        union all select * from :tenth
        union all select * from :firstB
        union all select * from :secondB
        union all select * from :thirdB
        union all select * from :fourthB
        union all select * from :fifthB
        union all select * from :sixthB
        union all select * from :seventhB
        union all select * from :eighthB
        union all select * from :ninthB
        union all select * from :tenthB;
	
END